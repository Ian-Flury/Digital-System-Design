library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;
use work.all;

entity counter is 
    port(
        clock       : in std_logic;
        clock_24    : out std_logic
    );
end counter;

architecture rtl of counter is
    -- 25000000 / 24 is 24 Hz 
    constant limit_c : integer := 1000000;
begin

    counter_p: process(clock)
        variable count : unsigned(19 downto 0);
    begin
        if RST = '1' then
            count := (others => '0');
        elsif clock'EVENT and clock = '1' then
            count := count + 1;
            if count > limit_c then
                -- if the counter's at the limit then reset it.
                count := (others => '0');
            end if;
        end if;
    end process;
    -- 1000000 is represented with 20 bits pick the high bit
    clock_24 <= count[19]

end rtl ; --counter